/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-06-02 07:49:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.fundProject.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import DAO.BoardDAO;
import java.util.ArrayList;
import Bean.BoardBeans;
import DAO.CommentDAO;
import Bean.CommentBeans;

public final class boardView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Bean.BoardBeans");
    _jspx_imports_classes.add("Bean.CommentBeans");
    _jspx_imports_classes.add("DAO.BoardDAO");
    _jspx_imports_classes.add("DAO.CommentDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- session 부분 -->  \r\n");

	request.setCharacterEncoding("UTF-8");
	response.setContentType("text/html; charset=UTF-8");
	String sName = (String)session.getAttribute("u_nm");	
	String sU_idx = (String)session.getAttribute("u_idx");
	String pj_idx = (String)session.getAttribute("pj_idx");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- request 부분 -->\r\n");

String b_idx = request.getParameter("b_idx");


      out.write("    \r\n");
      out.write("<!-- boardDAO -->\r\n");

	BoardDAO boardDAO = new BoardDAO();
	ArrayList<BoardBeans> blist = new ArrayList<BoardBeans>();
	
	blist = boardDAO.getBoard(b_idx);
	//--- test 코드-------
	//System.out.println(list);
	//------------------
	String b_nm = boardDAO.getName(Integer.toString(blist.get(0).getB_u_idx()));
	String b_time = blist.get(0).getB_time().substring(0,11);
	int days = boardDAO.getDate(b_time);
	String b_content = blist.get(0).getB_content();
	//System.out.println(b_nm);
	//...................

      out.write("\r\n");
      out.write("<!-- CommentDAO -->\r\n");

	CommentDAO cDAO = new CommentDAO();
	ArrayList<CommentBeans> clist = new ArrayList<CommentBeans>();
	clist = cDAO.getComments(b_idx);
	int c_cnt = cDAO.getCommentCnt(b_idx);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../css/boardView.css\">\r\n");
      out.write("\r\n");
      out.write("<title>게시글 상세보기</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"wrap_view\">\r\n");
      out.write("\t<a href=\"../fundProject/ProjectPageBList.jsp\">\r\n");
      out.write("        <div class=\"back_bt_container\"><button class=\"back_bt\">커뮤니티로 돌아가기</button></div>\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"container_content\">\r\n");
      out.write("            <div class=\"board_header\">\r\n");
      out.write("                <div class=\"head_name\">게시글 상세보기</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"wrap_content\">\r\n");
      out.write("                <div class=\"board_content_container\">\r\n");
      out.write("                    <div class=\"content_header\">\r\n");
      out.write("                        <span class=\"cd_profile_img\"></span>\r\n");
      out.write("                        <div class=\"bd_info\">\r\n");
      out.write("                            <div class=\"bd_name\">\r\n");
      out.write("                                <div class=\"bd_name_content\">");
      out.print(b_nm );
      out.write("</div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <span class=\"bd_reg_dt\">");
      out.print(days );
      out.write("일 전</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"content_main\">\r\n");
      out.write("                        <div class=\"card_content\">\r\n");
      out.write("                            ");
      out.print(b_content );
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"board_comment\">\r\n");
      out.write("                        <strong>");
      out.print(c_cnt );
      out.write("</strong>개의 댓글이 있습니다.\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- boardComment부분 -->\r\n");
      out.write("                ");

                	for(int i = 0; i < clist.size(); i++){
                		String nm = cDAO.getName(Integer.toString(clist.get(i).getC_u_idx()));
                		String c_dt = clist.get(i).getC_dt().substring(0, 16);
                		System.out.println(c_dt);
                		String c_content = clist.get(i).getC_content();
                	
      out.write("\r\n");
      out.write("                <div class=\"board_comment_container\">\r\n");
      out.write("                    <div class=\"profile_img_css\"><span class=\"profile_img\"></span></div>\r\n");
      out.write("                    <div class=\"comment_container\">\r\n");
      out.write("                        <div class=\"comment_info\">\r\n");
      out.write("                            <div class=\"comment_nm_container\">\r\n");
      out.write("                                <div class=\"comment_nm\">");
      out.print( nm );
      out.write("</div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"comment_reg_dt\">");
      out.print(c_dt );
      out.write("</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"comment_content\">");
      out.print(c_content );
      out.write("</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                	}
                
      out.write("\r\n");
      out.write("                <!-- comment input창 -->\r\n");
      out.write("                <div class=\"comment_input_container\">\r\n");
      out.write("                    <div class=\"comment_profile_img\"></div>\r\n");
      out.write("                    <div class=\"comment_input\">\r\n");
      out.write("                        <form name=\"cForm\" method=\"POST\" action=\"commentWriteP.jsp?b_idx=");
      out.print(b_idx);
      out.write("\">\r\n");
      out.write("                            <input name=c_content class=\"input_cm\" type=\"text\" placeholder=\"댓글을 작성해주세요.\">\r\n");
      out.write("                            \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div><button type=\"submit\" class=\"cm_bt\">올리기</button></div>\r\n");
      out.write("                </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
