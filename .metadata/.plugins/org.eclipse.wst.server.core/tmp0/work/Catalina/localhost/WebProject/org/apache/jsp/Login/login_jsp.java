/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-06-01 17:38:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("ㅇ\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"login.css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction loginCheck(){\r\n");
      out.write("\t\tif(document.loginForm.u_email.value==\"\"){\r\n");
      out.write("\t\t\talert(\"이메일를 입력해 주세요.\");\r\n");
      out.write("\t\t\tdocument.loginForm.id.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (document.loginForm.u_pwd.value == \"\") {\r\n");
      out.write("\t\t\talert(\"비밀번호를 입력해 주세요.\");\r\n");
      out.write("\t\t\tdocument.loginFrm.pwd.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.loginForm.action = \"loginProc.jsp\";\r\n");
      out.write("\t\tdocument.loginForm.submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"membership_wrap\">\r\n");
      out.write("\t\t<div class=\"membership_body\">\r\n");
      out.write("\t\t\t<div style=\"display: flex; flex-direction: column\">\r\n");
      out.write("\t\t\t\t<a id=\"facebook\"\r\n");
      out.write("\t\t\t\t\thref=\"/auth/facebook?from_pledge=false&origin=https%3A%2F%2Fwww.tumblbug.com%2F\">\r\n");
      out.write("\t\t\t\t\t<!-- :before 로 로그 넣어줘야함 --> <i class=\"facebooklogo\"></i> 페이스북 아이디로\r\n");
      out.write("\t\t\t\t\t로그인\r\n");
      out.write("\t\t\t\t</a> <a id=\"naver\"\r\n");
      out.write("\t\t\t\t\thref=\"/auth/naver?from_pledge=false&origin=https%3A%2F%2Fwww.tumblbug.com%2F\">\r\n");
      out.write("\t\t\t\t\t<svg class=\"naverIcon\" width=\"1em\" height=\"1em\"\r\n");
      out.write("\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 18.31\">\r\n");
      out.write("                        <title >naverIcon</title>\r\n");
      out.write("                        <path\r\n");
      out.write("\t\t\t\t\t\t\td=\"M20,19.15H13.33A0.34,0.34,0,0,1,13,19L7,10.22,6.84,10v9.15H0V0.85H6.68A0.32, 0.32,0,0,1,7,1l6,8.75a0.82,0.82,0,0,0,.19.22V0.86H20v18.3Z\"\r\n");
      out.write("\t\t\t\t\t\t\ttransform=\"translate(0 -0.84)\" fill=\"#fff\" data-reactid=\"45\"></path>\r\n");
      out.write("                    </svg> 네이버 아이디로로그인\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"orLine\">\r\n");
      out.write("\t\t\t\t<span><span>또는</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!--  name: loginForm    -->\r\n");
      out.write("\t\t\t<form class=\"userBox\" autocomplete=\"on\" name=\"loginForm\">\r\n");
      out.write("\t\t\t\t<label class=\"signIn\" for=\"login\">이메일</label>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 이메일  name: email -->\r\n");
      out.write("\t\t\t\t<input type=\"email\" required=\"\" autocomplete=\"email\"\r\n");
      out.write("\t\t\t\t\tclass=\"inputTag\" id=\"login\" placeholder=\"이메일 주소입력\" name=\"u_email\" value=\"\"> \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label class=\"signIn\" for=\"password\">비밀번호</label>\r\n");
      out.write("\t\t\t\t<!-- 비밀번호  name: pwd-->\r\n");
      out.write("\t\t\t\t<input type=\"password\" class=\"inputTag\" id=\"u_pwd\" name=\"u_pwd\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"비밀번호 입력\" autocomplete=\"current-password\" required=\"\"\r\n");
      out.write("\t\t\t\t\tautocapitalize=\"off\" autocorrect=\"off\" spellcheck=\"off\" name=\"pwd\"\r\n");
      out.write("\t\t\t\t\tvalue=\"\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 로그인 버튼! loginCheck() 메소드로-->\r\n");
      out.write("\t\t\t\t<button class=\"loginButton\" type=\"submit\" label=\"로그인하기\"\r\n");
      out.write("\t\t\t\t\tonclick=\"loginCheck()\" style=\"margin: 20px 0; height: 45px;\">로그인</button>\r\n");
      out.write("\t\t\t\t<a class=\"idExist\" href=\"Member.jsp\">\r\n");
      out.write("\t\t\t\t\t<span style=\"color: #757575;\" data-reactid=\"57\">아직 계정이 없으신가요?</span> \r\n");
      out.write("\t\t\t\t\t텀블벅 가입하기\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<div style=\"text-align: center; margin-top: 40px;\" data-reactid=\"59\">\r\n");
      out.write("\t\t\t\t<a style=\"text-decoration: none; color: #ff4543;\"\r\n");
      out.write("\t\t\t\t\thref=\"/forgot-password\" data-reactid=\"60\">혹시 비밀번호를 잊으셨나요?</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
