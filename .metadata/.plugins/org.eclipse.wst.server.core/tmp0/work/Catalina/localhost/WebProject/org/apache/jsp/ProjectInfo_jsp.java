/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-05-25 03:33:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import Bean.*;

public final class ProjectInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("Bean");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
      DAO.MypageDAO MypageDAO = null;
      MypageDAO = (DAO.MypageDAO) _jspx_page_context.getAttribute("MypageDAO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (MypageDAO == null){
        MypageDAO = new DAO.MypageDAO();
        _jspx_page_context.setAttribute("MypageDAO", MypageDAO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원정보</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 	request.setCharacterEncoding("UTF-8");
	String u_idx= (String)session.getAttribute("u_idx");
	out.println(u_idx);
	
	ArrayList<ProjectBean> list = MypageDAO.getProjectList(u_idx);
	
	int counter =list.size();
	out.print(counter);
	for(int i=0; i<list.size();i++){
		ProjectBean PJBean = list.get(i);

      out.write("\r\n");
      out.write("\r\n");
      out.print(PJBean.getAc_no() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getAh() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getAh_birth() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getBank_nm() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getLeader_intro() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getLeader_loc() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getLeader_nm() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getObj_price() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_category() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_end_dt() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_f_price() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_idx() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_img() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_intro_video() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_reg_dt() );
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_short_title());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_story());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_summary());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_sup_num());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_title());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_u_idx());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getPj_url());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getProfile_img());
      out.write('\r');
      out.write('\n');
      out.print(PJBean.getSearch_tag());
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
