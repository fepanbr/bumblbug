/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-05-14 01:08:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 
		request.setCharacterEncoding("EUC-KR");

      out.write('\r');
      out.write('\n');
      ch09.MemberBean regBean = null;
      regBean = (ch09.MemberBean) _jspx_page_context.getAttribute("regBean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (regBean == null){
        regBean = new ch09.MemberBean();
        _jspx_page_context.setAttribute("regBean", regBean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("regBean"), request);
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>회원가입 확인</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#996600\">\r\n");
      out.write("<table width=\"80%\"align=\"center\" cellspacing=\"0\" cellpadding=\"5\" >\r\n");
      out.write("  <tr> \r\n");
      out.write("    <td align=\"center\" valign=\"middle\" bgcolor=\"#FFFFCC\"> \r\n");
      out.write("\t<table width=\"90%\" border=\"1\" cellspacing=\"0\" cellpadding=\"2\"  align=\"center\">\r\n");
      out.write("        <form name=\"regForm\" method=\"post\" action=\"memberInsert.jsp\">\r\n");
      out.write("          <tr align=\"center\" bgcolor=\"#996600\"> \r\n");
      out.write("            <td colspan=\"3\"><font color=\"#FFFFFF\"><b> \r\n");
      out.write("              ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch09.MemberBean)_jspx_page_context.findAttribute("regBean")).getName())));
      out.write("\r\n");
      out.write("              회원님이 작성하신 내용입니다. 확인해 주세요</b></font></td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr> \r\n");
      out.write("            <td width=\"24%\">아이디</td>\r\n");
      out.write("            <td width=\"41%\">");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch09.MemberBean)_jspx_page_context.findAttribute("regBean")).getId())));
      out.write("</td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr> \r\n");
      out.write("            <td>패스워드</td>\r\n");
      out.write("            <td> ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch09.MemberBean)_jspx_page_context.findAttribute("regBean")).getPwd())));
      out.write("</td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr> \r\n");
      out.write("            <td>이름</td>\r\n");
      out.write("            <td> ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch09.MemberBean)_jspx_page_context.findAttribute("regBean")).getName())));
      out.write("</td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr> \r\n");
      out.write("            <td>생년월일</td>\r\n");
      out.write("            <td> ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch09.MemberBean)_jspx_page_context.findAttribute("regBean")).getBirthday())));
      out.write("</td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr>\r\n");
      out.write("            <td>이메일</td>\r\n");
      out.write("            <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((ch09.MemberBean)_jspx_page_context.findAttribute("regBean")).getEmail())));
      out.write("</td>\r\n");
      out.write("          </tr>\r\n");
      out.write("          <tr> \r\n");
      out.write("            <td colspan=\"2\" align=\"center\"> \r\n");
      out.write("             <input type=\"button\" value=\"확인완료\"> &nbsp; \r\n");
      out.write("\t\t\t  <input type=\"button\" value=\"다시쓰기\" onClick=\"history.back()\"> \r\n");
      out.write("            </td>\r\n");
      out.write("          </tr>\r\n");
      out.write("        </form>\r\n");
      out.write("      </table>\r\n");
      out.write("\t  </td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
